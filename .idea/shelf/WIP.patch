Index: driver/test/rxmongo/driver/MessageSpec.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- driver/test/rxmongo/driver/MessageSpec.scala	(revision 681232bac320d3dafa7f8840483610a2514f293e)
+++ driver/test/rxmongo/driver/MessageSpec.scala	(revision )
@@ -134,6 +134,10 @@
     "produce correct buffer for OP_GET_MORE" in {
       val replyBuff : ByteString = {
         // struct {
+        //  int32   requestID;     // identifier for this message
+        //  int32   responseTo;    // requestID from the original request (used in reponses from db)
+        //  int32   opCode;        // request type - see table below
+
         //   MsgHeader header;         // standard message header
         //   int32     responseFlags;  // bit vector - see details below
         //   int64     cursorID;       // cursor id if client needs to do get more's
@@ -142,8 +146,13 @@
         //   document* documents;      // documents
         // }
         val b = ByteString.newBuilder
+        b.putInt(36)
+        b.putInt(1)
+        b.putInt(23)
+        b.putInt(Message.OP_QUERY.id)
         b.putInt(0)
-        b.putLong(23L)
+        b.putCStr("db.coll")
+        b.putInt(1)
         b.putInt(0)
         b.putInt(0)
         b.result()
Index: driver/src/rxmongo/driver/Channel.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- driver/src/rxmongo/driver/Channel.scala	(revision 681232bac320d3dafa7f8840483610a2514f293e)
+++ driver/src/rxmongo/driver/Channel.scala	(revision )
@@ -31,6 +31,7 @@
 import akka.util.ByteString
 import rxmongo.driver.Channel.{ Ack, ConnectionFailed }
 
+import scala.collection.mutable
 import scala.concurrent.duration.Duration
 
 object Channel {
@@ -39,9 +40,11 @@
 
   case object Ack extends Event
   case class CloseWithAck(ack : Any)
+  case class SendMessage(msg : RequestMessage, replyTo : ActorRef)
 
-  sealed trait ConnectionResponse
-  case class ConnectionFailed(conn : Connect) extends ConnectionResponse
+  sealed trait ChannelResponse
+  case class ConnectionFailed(conn : Connect) extends ChannelResponse
+  case class UnsolicitedReply(reply : ReplyMessage) extends ChannelResponse
 }
 
 class Channel(remote : InetSocketAddress, options : ConnectionOptions, listener : ActorRef)
@@ -63,6 +66,8 @@
     timeout = options.connectTimeoutMS match { case 0 ⇒ None; case x : Long ⇒ Some(Duration(x, "ms")) },
     pullMode = true)
 
+  val pendingResponses = mutable.HashMap.empty[Int, ActorRef]
+
   def receive = {
     case CommandFailed(conn : Connect) ⇒
       listener ! ConnectionFailed(conn)
@@ -77,16 +82,22 @@
   }
 
   def connected(connection : ActorRef) : Receive = {
-
     case message : RequestMessage ⇒ // Send a message to Mongo via connection actor
       connection ! Write(message.finish, Channel.Ack)
+      if (message.requiresResponse)
+        pendingResponses.put(message.requestId, sender())
 
     case Ack ⇒ // Receive Write Ack from connection actor
       connection ! ResumeReading // Tell connection actor we can read more now
 
     case Received(data : ByteString) ⇒ // Receive a reply from Mongo
       val reply = ReplyMessage(data) // Encapsulate that in a ReplyMessage
-      listener ! reply // Pass the buck
+      pendingResponses.get(reply.responseTo) match {
+        case Some(actor) ⇒ actor ! reply
+        case None ⇒
+          log.warning(s"Received reply ($reply) but matching request was not found")
+          listener ! Channel.UnsolicitedReply(reply)
+      }
 
     case CommandFailed(w : Write) ⇒ // A write has failed
       // O/S buffer was full
Index: driver/src/rxmongo/driver/ConnectionOptions.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- driver/src/rxmongo/driver/ConnectionOptions.scala	(revision 681232bac320d3dafa7f8840483610a2514f293e)
+++ driver/src/rxmongo/driver/ConnectionOptions.scala	(revision )
@@ -26,6 +26,8 @@
 
 import akka.http.model.Uri.Query
 
+import scala.concurrent.duration._
+
 /** Options for connecting to a Mongo Replica Set.
   *
   * When a connection to a replica set is made, several options are available to control the aspects of establishing
@@ -33,31 +35,31 @@
   * how hard they want RxMongo to try to maintain a connection to a replica set.
   *
   * @param replicaSet Specifies the name of the replica set, if the mongod is a member of a replica set. When
-  *         connecting to a replica set it is important to give a seed list of at least two mongod instances.
+  *        connecting to a replica set it is important to give a seed list of at least two mongod instances.
-  *         If you only provide the connection point of a single mongod instance, and omit the replicaSet,
+  *        If you only provide the connection point of a single mongod instance, and omit the replicaSet,
-  *         the client will create a standalone connection.
+  *        the client will create a standalone connection.
   * @param ssl When true: Initiate the connection with SSL. When false: Initiate the connection without SSL. The
-  *  default value is false.
+  * default value is false.
   * @param connectTimeoutMS The time in milliseconds to attempt a connection before timing out. The default (0) is never
-  *               to timeout, unless the underlying TCP implementation times out.
+  *              to timeout, unless the underlying TCP implementation times out.
   * @param socketTimeoutMS The time in milliseconds to attempt a send or receive on a socket before the attempt times
-  *              out. The default (0) is never to timeout, unless the underlying TCP implementation times out.
+  *             out. The default (0) is never to timeout, unless the underlying TCP implementation times out.
   * @param maxPoolSize The maximum number of channels, per replica node, in the channel pool. The default value is 100.
-  *          RxMongo will always attempt to keep at least this number of channels active and ready for use.
+  *         RxMongo will always attempt to keep at least this number of channels active and ready for use.
-  *          If this is too low, it affects latency of requests because channels may need to be obtained
+  *         If this is too low, it affects latency of requests because channels may need to be obtained
-  *          frequently. If this is too high, it consumes unneeded resources in the form of TCP connections.
+  *         frequently. If this is too high, it consumes unneeded resources in the form of TCP connections.
   * @param minPoolSize The minimum number of channels, per replica node, in the channel pool. The default value is 0.
-  *          RxMongo will never allocate more channels than specified by this value. If this is set too low
+  *         RxMongo will never allocate more channels than specified by this value. If this is set too low
-  *          then blocking will occur as more requests are being processed than the pool of channels can
+  *         then blocking will occur as more requests are being processed than the pool of channels can
-  *          handle. If this is set too high, then unneeded connections may be retained until the idle
+  *         handle. If this is set too high, then unneeded connections may be retained until the idle
-  *          timeout expires.
+  *         timeout expires.
   * @param maxIdleTimeMS The maximum number of milliseconds that a connection can remain idle in the pool before being
-  *            removed and closed. The default is 60,000.
+  *           removed and closed. The default is 60,000.
   * @param waitQueueMultiple A number that the driver multiples the maxPoolSize value to, to provide the maximum number
-  *                of requests allowed to wait for a connection to become available from the pool. The
+  *               of requests allowed to wait for a connection to become available from the pool. The
-  *                default, 0, indicates that the requests are only constrained by memory size
+  *               default, 0, indicates that the requests are only constrained by memory size
   * @param waitQueueTimeoutMS The maximum time in milliseconds that a request can wait for a connection to become
-  *                 available. The default is 60,000
+  *                available. The default is 60,000
   * @param w The Write Concern option. Write concern describes the kind of assurances that the mongod and the driver
   * provide to the application regarding the success and durability of the write operation. This option defines
   * the level and kind of write concern. This option can take either a number or a string as a value, as
@@ -66,90 +68,90 @@
   * Option	Type	  Description
   * -1      number  The driver will not acknowledge write operations and will suppress all network or socket errors.
   * 0      number  The driver will not acknowledge write operations but will pass or handle any network and socket
-  *        errors that it receives to the client. You can specify the write concern both in the connection
+  *       errors that it receives to the client. You can specify the write concern both in the connection
-  *        string and as a parameter to method calls like insert or update. If the write concern is specified
+  *       string and as a parameter to method calls like insert or update. If the write concern is specified
-  *        in both places, the method parameter overrides the connection-string setting.
+  *       in both places, the method parameter overrides the connection-string setting.
   * 1      number  Provides basic acknowledgment of write operations. By specifying 1, you require that a standalone
-  *        mongod instance, or the primary for replica sets, acknowledge all write operations. This is the
+  *       mongod instance, or the primary for replica sets, acknowledge all write operations. This is the
-  *        default write concern setting.
+  *       default write concern setting.
   * majority string  For replica sets, if you specify the special majority value to w option, write operations will
-  *        only return successfully after a majority of the voting members of the replica set have
+  *       only return successfully after a majority of the voting members of the replica set have
-  *        acknowledged the write operation.
+  *       acknowledged the write operation.
   * n      number  For replica sets, if you specify a number n, greater than 1, operations with this write concern
-  *        return only after n members of the set have acknowledged the write. If you set n to a number that
+  *       return only after n members of the set have acknowledged the write. If you set n to a number that
-  *        is greater than the number of available set members or members that hold data, MongoDB will wait,
+  *       is greater than the number of available set members or members that hold data, MongoDB will wait,
-  *        potentially indefinitely, for these members to become available.
+  *       potentially indefinitely, for these members to become available.
   * tags	   string  For replica sets, you can specify a tag set to require that all members of the set that have these
-  *        tags configured return confirmation of the write operation.
+  *       tags configured return confirmation of the write operation.
   * }}}
   *
   * @param wtimeoutMS The time in milliseconds to wait for replication to succeed, as specified in the w option,
-  *         before timing out. When wtimeoutMS is 0 (the default), write operations will never time out.
+  *        before timing out. When wtimeoutMS is 0 (the default), write operations will never time out.
   * @param journal Controls whether write operations will wait until the mongod acknowledges the write operations and
-  *      commits the data to the on disk journal. When true: Enables journal commit acknowledgment write
+  *     commits the data to the on disk journal. When true: Enables journal commit acknowledgment write
-  *      concern. Equivalent to specifying a write concern with the j option enabled. When false: Does not
+  *     concern. Equivalent to specifying a write concern with the j option enabled. When false: Does not
-  *      require that mongod commit write operations to the journal before acknowledging the write operation.
+  *     require that mongod commit write operations to the journal before acknowledging the write operation.
-  *      This is the default option for the journal parameter. If you set journal to true, and specify a w
+  *     This is the default option for the journal parameter. If you set journal to true, and specify a w
-  *      value less than 1, journal prevails. If you set journal to true, and the mongod does not have
+  *     value less than 1, journal prevails. If you set journal to true, and the mongod does not have
-  *      journaling enabled, as with storage.journal.enabled, then MongoDB will error.
+  *     journaling enabled, as with storage.journal.enabled, then MongoDB will error.
   * @param readPreference The Read Preference Option. The Read preference describe the behavior of read operations with
-  *             regards to replica sets. It specifies the replica set read preference for this connection.
+  *            regards to replica sets. It specifies the replica set read preference for this connection.
-  *             The read preference values are the following: "primary": All read operations use only the
+  *            The read preference values are the following: "primary": All read operations use only the
-  *             current replica set primary. This is the default. If the primary is unavailable, read
+  *            current replica set primary. This is the default. If the primary is unavailable, read
-  *             operations produce an error or throw an exception. "primaryPreferred": In most situations,
+  *            operations produce an error or throw an exception. "primaryPreferred": In most situations,
-  *             operations read from the primary member of the set. However, if the primary is unavailable,
+  *            operations read from the primary member of the set. However, if the primary is unavailable,
-  *             as is the case during failover situations, operations read from secondary members.
+  *            as is the case during failover situations, operations read from secondary members.
-  *             "secondary": Operations read only from the secondary members of the set. If no secondaries
+  *            "secondary": Operations read only from the secondary members of the set. If no secondaries
-  *             are available, then this read operation produces an error or exception. Read operations using
+  *            are available, then this read operation produces an error or exception. Read operations using
-  *             the secondary mode may return stale data. "secondaryPreferred": In most situations,
+  *            the secondary mode may return stale data. "secondaryPreferred": In most situations,
-  *             operations read from secondary members, but in situations where the set consists of a
+  *            operations read from secondary members, but in situations where the set consists of a
-  *             single primary (and no other members), the read operation will use the set’s primary.
+  *            single primary (and no other members), the read operation will use the set’s primary.
-  *             Read operations using the secondaryPreferred mode may return stale data. "nearest":
+  *            Read operations using the secondaryPreferred mode may return stale data. "nearest":
-  *             The driver reads from the nearest member of the set according to the member selection
+  *            The driver reads from the nearest member of the set according to the member selection
-  *             process. Reads in the nearest mode do not consider the member’s type. Reads in nearest mode
+  *            process. Reads in the nearest mode do not consider the member’s type. Reads in nearest mode
-  *             may read from both primaries and secondaries. Set this mode to minimize the effect of
+  *            may read from both primaries and secondaries. Set this mode to minimize the effect of
-  *             network latency on read operations without preference for current or stale data. Read
+  *            network latency on read operations without preference for current or stale data. Read
-  *             operations using the nearest mode may return stale data.
+  *            operations using the nearest mode may return stale data.
   * @param readPreferenceTags Specifies a tag set as a comma-separated list of colon-separated key-value pairs.
-  *                 For example: `dc:ny,rack:1`. To specify a list of tag sets, use multiple
+  *                For example: `dc:ny,rack:1`. To specify a list of tag sets, use multiple
-  *                 readPreferenceTags options. The following specifies two tag sets and an empty tag set:
+  *                readPreferenceTags options. The following specifies two tag sets and an empty tag set:
-  *                 `readPreferenceTags=dc:ny,rack:1&readPreferenceTags=dc:ny&readPreferenceTags=`. Order
+  *                `readPreferenceTags=dc:ny,rack:1&readPreferenceTags=dc:ny&readPreferenceTags=`. Order
-  *                 matters when using multiple readPreferenceTags.
+  *                matters when using multiple readPreferenceTags.
   * @param authSource Specify the database name associated with the user’s credentials, if the users collection do
-  *         not exist in the database where the client is connecting. authSource defaults to the database
+  *        not exist in the database where the client is connecting. authSource defaults to the database
-  *         specified in the connection string. For authentication mechanisms that delegate credential
+  *        specified in the connection string. For authentication mechanisms that delegate credential
-  *         storage to other services, the authSource value should be $external as with the
+  *        storage to other services, the authSource value should be $external as with the
-  *         PLAIN (LDAP) and GSSAPI (Kerberos) authentication mechanisms. MongoDB will ignore authSource
+  *        PLAIN (LDAP) and GSSAPI (Kerberos) authentication mechanisms. MongoDB will ignore authSource
-  *         values if the connection string specifies no user name.
+  *        values if the connection string specifies no user name.
   * @param authMechanism Support for the PLAIN and MONGODB-X509 authentication mechanisms. Specify the authentication
-  *            mechanism that MongoDB will use to authenticate the connection. Possible values include:
+  *           mechanism that MongoDB will use to authenticate the connection. Possible values include:
-  *            "MONGODB-CR", "MONGODB-X509", "GSSAPI", "PLAIN". Only MongoDB Enterprise mongod and mongos
+  *           "MONGODB-CR", "MONGODB-X509", "GSSAPI", "PLAIN". Only MongoDB Enterprise mongod and mongos
-  *            instances provide GSSAPI (Kerberos) and PLAIN (LDAP) mechanisms. To use MONGODB-X509, you must
+  *           instances provide GSSAPI (Kerberos) and PLAIN (LDAP) mechanisms. To use MONGODB-X509, you must
-  *            have SSL Enabled.
+  *           have SSL Enabled.
   * @param gssapiServiceName Set the Kerberos service name when connecting to Kerberized MongoDB instances. This value
-  *                must match the service name set on MongoDB instances. gssapiServiceName defaults to
+  *               must match the service name set on MongoDB instances. gssapiServiceName defaults to
-  *                mongodb for all clients and for MongoDB instance. If you change saslServiceName setting
+  *               mongodb for all clients and for MongoDB instance. If you change saslServiceName setting
-  *                on a MongoDB instance, you will need to set gssapiServiceName to the same value.
+  *               on a MongoDB instance, you will need to set gssapiServiceName to the same value.
   * @param uuidRepresentation The representation of UUIDs in this driver. This is provided for completeness only with
-  *                 the MongoDB documentation. For RxMongo, this value is always "standard"
+  *                the MongoDB documentation. For RxMongo, this value is always "standard"
   * @param tcpNoDelay Enables or disables the TCP_NODELAY flag (disable/enable Nagle's algorithm). Enabled by default.
   * @param tcpKeepAlive Enables or disables the TCP_KEEPALIVE flag. Enabled by default
   * @param tcpOOBInline Enables or disables the TCP_OOBINLINE flag (receipt of urgent data). Disabled by default.
   * @param localIP Optionally specifies the local IP address from which the connection should be established. If not
-  *      specified, the connection is made through whichever route can get there.
+  *     specified, the connection is made through whichever route can get there.
   * @param localPort Optionally specifies the local TCP port number to use. Next available is used if not specified.
   * @param rampupRate The rate at which the Channel pool grows when it is time to add more Channels. The default is
-  *                  0.25 or 25% of maxPoolSize (rounded up). For example, if maxPoolSize is 10 then whenever the
+  *                 0.25 or 25% of maxPoolSize (rounded up). For example, if maxPoolSize is 10 then whenever the
-  *                  pool needs to grow (all channels are busy), it will grow by 3.
+  *                 pool needs to grow (all channels are busy), it will grow by 3.
   * @param backoffThreshold The threshold of the Channel pool that is busy below which the pools size is decreased. The
-  *                        default is 0.25 or 25% of maxPoolSize (rounded up). For example if maxPoolSize is 10 then
+  *                       default is 0.25 or 25% of maxPoolSize (rounded up). For example if maxPoolSize is 10 then
-  *                        the pool size will only be lowered when 3 or fewer Channels are busy.
+  *                       the pool size will only be lowered when 3 or fewer Channels are busy.
   * @param backoffRate The rate at which we remove channels from the pool when we are backing off. The default value
-  *                   is 0.10 or 10% of maxPoolSize (rounded up). FOr example, if maxPoolSize is 10 then whenever we
+  *                  is 0.10 or 10% of maxPoolSize (rounded up). FOr example, if maxPoolSize is 10 then whenever we
-  *                   are removing channels, we remove 1 at a time
+  *                  are removing channels, we remove 1 at a time
   * @param messagesPerResize The number of messages flowing into the connection between size checks. Increasing this
-  *                         value decreases the overhead of the resizing logic at the expense of potentially increasing
+  *                        value decreases the overhead of the resizing logic at the expense of potentially increasing
-  *                         processing delays because channels were not created quickly enough. The default is 10
+  *                        processing delays because channels were not created quickly enough. The default is 10
   */
 
 case class ConnectionOptions(
@@ -180,7 +182,22 @@
   backoffThreshold : Double = 0.25, // Only back off when we are less than 25% busy
   backoffRate : Double = 0.10, // Remove 10% of the pool when we back off
   messagesPerResize : Int = 10 // Only check for resizing every 10 messages
-  )
+  ) {
+  def validate : ConnectionOptions = {
+    require(connectTimeoutMS >= 0 && connectTimeoutMS < 1.hour.toMillis, "connectTimeoutMS must be between 0 and 1 hour")
+    require(socketTimeoutMS >= 0 && socketTimeoutMS < 1.days.toMillis, "socketTimeoutMS must be between 0 and 1 day")
+    require(maxPoolSize > 0, "maxPoolSize must be positive")
+    require(minPoolSize >= 0, "minPoolSize must be non-negative")
+    require(maxPoolSize > minPoolSize, "maxPoolSize must be larger than minPoolSize")
+    require(maxIdleTimeMS >= 0 && maxIdleTimeMS < 1.days.toMillis, "maxIdleTimeMS must be between 0 and 1 day")
+    require(wtimeoutMS >= 0 && wtimeoutMS < 1.days.toMillis, "wtimeoutMS must be between 0 and 1 day")
+    require(rampupRate > 0.0 && rampupRate <= 1.0, "rampupRate must be between 0.0 and 1.0 ")
+    require(backoffThreshold > 0.0 && backoffThreshold < 1.0, "backoffThreshold must be between 0.0 and 1.0")
+    require(backoffRate > 0.0 && backoffRate <= 1.0, "backoffRate must be between 0.0 and 1.0")
+    require(messagesPerResize >= 0 && messagesPerResize < 1000000, "messagesPerResize must be between 1 and 1,000,000")
+    this
+  }
+}
 
 object ConnectionOptions {
   def apply(s : String) : ConnectionOptions = {
@@ -219,7 +236,7 @@
     r = addOption("backoffThreshold") { v ⇒ r.copy(backoffThreshold = v.toDouble) }
     r = addOption("backoffRate") { v ⇒ r.copy(backoffRate = v.toDouble) }
     r = addOption("messagesPerResize") { v ⇒ r.copy(messagesPerResize = v.toInt) }
-    r
+    r.validate
   }
 }
 
Index: driver/src/rxmongo/driver/Message.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- driver/src/rxmongo/driver/Message.scala	(revision 681232bac320d3dafa7f8840483610a2514f293e)
+++ driver/src/rxmongo/driver/Message.scala	(revision )
@@ -81,18 +81,20 @@
     header ++= content
     header.result()
   }
+
+  def requiresResponse : Boolean = false
 }
 
 /** The Mongo Update Message
   * The OP_UPDATE message is used to update a document in a collection.
   * @param fullCollectionName The full name of the collection, including database name, like "dbName.collectionName".
-  *                      The full collection name is the concatenation of the database name with the collection
+  *                     The full collection name is the concatenation of the database name with the collection
-  *                      name, using a . for the concatenation. For example, for the database foo and the
+  *                     name, using a . for the concatenation. For example, for the database foo and the
-  *                      collection bar, the full collection name is foo.bar.
+  *                     collection bar, the full collection name is foo.bar.
   * @param selector The document selector used to match which documents will be updated
   * @param update The update to apply to the selected documents
   * @param upsert If set, the database will insert the supplied object into the collection if no matching
-  *          document is found
+  *         document is found
   * @param multiUpdate if set, the database will update all matching objects in the collection, not just the first one.
   */
 case class UpdateMessage(
@@ -125,14 +127,14 @@
 /** The Mongo Insert Message
   * The OP_INSERT message is used to insert one or more documents into a collection.
   * @param fullCollectionName The full name of the collection, including database name, like "dbName.collectionName".
-  *                      The full collection name is the concatenation of the database name with the collection
+  *                     The full collection name is the concatenation of the database name with the collection
-  *                      name, using a . for the concatenation. For example, for the database foo and the
+  *                     name, using a . for the concatenation. For example, for the database foo and the
-  *                      collection bar, the full collection name is foo.bar.
+  *                     collection bar, the full collection name is foo.bar.
   * @param documents A sequence of documents to be inserted into the collection
   * @param continueOnError If set, the database will not stop processing a bulk insert if one fails (eg due to
-  *                   duplicate IDs). This makes bulk insert behave similarly to a series of single inserts,
+  *                  duplicate IDs). This makes bulk insert behave similarly to a series of single inserts,
-  *                   except lastError will be set if any insert fails, not just the last one. If multiple
+  *                  except lastError will be set if any insert fails, not just the last one. If multiple
-  *                   errors occur, only the most recent will be reported by getLastError. (new in 1.9.1)
+  *                  errors occur, only the most recent will be reported by getLastError. (new in 1.9.1)
   */
 case class InsertMessage(
   fullCollectionName : String,
@@ -211,33 +213,35 @@
     putInt(numberToReturn).
     putDoc(query).
     putDoc(returnFieldsSelector)
+
+  override val requiresResponse : Boolean = true
 }
 
 /** The Mongo Query Message
   * The OP_QUERY message is used to query the database for documents in a collection.
   * @param fullCollectionName The full name of the collection, including database name, like "dbName.collectionName".
-  *                      The full collection name is the concatenation of the database name with the collection
+  *                     The full collection name is the concatenation of the database name with the collection
-  *                      name, using a . for the concatenation. For example, for the database foo and the
+  *                     name, using a . for the concatenation. For example, for the database foo and the
-  *                      collection bar, the full collection name is foo.bar.
+  *                     collection bar, the full collection name is foo.bar.
   * @param numberToSkip The number of documents to skip. Sets the number of documents to omit - starting from the first
-  *                document in the resulting dataset - when returning the result of the query.
+  *               document in the resulting dataset - when returning the result of the query.
   * @param numberToReturn The number of documents to return in the first OP_REPLY batch. Limits the number of documents
-  *                  in the first OP_REPLY message to the query. However, the database will still establish a
+  *                 in the first OP_REPLY message to the query. However, the database will still establish a
-  *                  cursor and return the cursorID to the client if there are more results than numberToReturn.
+  *                 cursor and return the cursorID to the client if there are more results than numberToReturn.
-  *                  If the client driver offers ‘limit’ functionality (like the SQL LIMIT keyword), then it is
+  *                 If the client driver offers ‘limit’ functionality (like the SQL LIMIT keyword), then it is
-  *                  up to the client driver to ensure that no more than the specified number of documents are
+  *                 up to the client driver to ensure that no more than the specified number of documents are
-  *                  returned to the calling application. If numberToReturn is 0, the db will use the default
+  *                 returned to the calling application. If numberToReturn is 0, the db will use the default
-  *                  return size. If the number is negative, then the database will return that number and
+  *                 return size. If the number is negative, then the database will return that number and
-  *                  close the cursor. No further results for that query can be fetched. If numberToReturn
+  *                 close the cursor. No further results for that query can be fetched. If numberToReturn
-  *                  is 1 the server will treat it as -1 (closing the cursor automatically).
+  *                 is 1 the server will treat it as -1 (closing the cursor automatically).
   * @param query The query object. BSON document that represents the query. The query will contain one or more
-  *         elements, all of which must match for a document to be included in the result set. Possible elements
+  *        elements, all of which must match for a document to be included in the result set. Possible elements
-  *         include $query, $orderby, $hint, $explain, and $snapshot.
+  *        include $query, $orderby, $hint, $explain, and $snapshot.
   * @param returnFieldsSelector Optional. Selector indicating the fields to return. BSON document that limits the
-  *                        fields in the returned documents. The returnFieldsSelector contains one or more
+  *                       fields in the returned documents. The returnFieldsSelector contains one or more
-  *                        elements, each of which is the name of a field that should be returned, and and the
+  *                       elements, each of which is the name of a field that should be returned, and and the
-  *                        integer value 1. In JSON notation, a returnFieldsSelector to limit to the fields
+  *                       integer value 1. In JSON notation, a returnFieldsSelector to limit to the fields
-  *                        a, b and c would be: `{ a : 1, b : 1, c : 1}`.
+  *                       a, b and c would be: `{ a : 1, b : 1, c : 1}`.
   *
   * The database will respond to an OP_QUERY message with an OP_REPLY message.
   */
@@ -257,19 +261,19 @@
 /** The Mongo GET MORE Message
   * The OP_GET_MORE message is used to query the database for documents in a collection. T
   * @param fullCollectionName The full name of the collection, including database name, like "dbName.collectionName".
-  *                      The full collection name is the concatenation of the database name with the collection
+  *                     The full collection name is the concatenation of the database name with the collection
-  *                      name, using a . for the concatenation. For example, for the database foo and the
+  *                     name, using a . for the concatenation. For example, for the database foo and the
-  *                      collection bar, the full collection name is foo.bar.
+  *                     collection bar, the full collection name is foo.bar.
   * @param numberToReturn Limits the number of documents in the first OP_REPLY message to the query. However, the
-  *                  database will still establish a cursor and return the cursorID to the client if there are
+  *                 database will still establish a cursor and return the cursorID to the client if there are
-  *                  more results than numberToReturn. If the client driver offers ‘limit’ functionality (like
+  *                 more results than numberToReturn. If the client driver offers ‘limit’ functionality (like
-  *                  the SQL LIMIT keyword), then it is up to the client driver to ensure that no more than the
+  *                 the SQL LIMIT keyword), then it is up to the client driver to ensure that no more than the
-  *                  specified number of document are returned to the calling application. If numberToReturn is 0,
+  *                 specified number of document are returned to the calling application. If numberToReturn is 0,
-  *                  the db will used the default return size.
+  *                 the db will used the default return size.
   * @param forReply The ReplyMessage for an OP_QUERY to which this GetMoreMessage is requesting more data. This is used
-  *            instead of a cursorID value so that it is not possible to mix up the cursorID. This means the
+  *           instead of a cursorID value so that it is not possible to mix up the cursorID. This means the
-  *            original reply message will stick around while we're still getting more messages. We're okay with
+  *           original reply message will stick around while we're still getting more messages. We're okay with
-  *            that.
+  *           that.
   */
 case class GetMoreMessage(
   fullCollectionName : String,
@@ -295,14 +299,14 @@
   * The OP_DELETE message is used to remove one or more documents from a collection.
   *
   * @param fullCollectionName The full name of the collection, including database name, like "dbName.collectionName".
-  *                      The full collection name is the concatenation of the database name with the collection
+  *                     The full collection name is the concatenation of the database name with the collection
-  *                      name, using a . for the concatenation. For example, for the database foo and the
+  *                     name, using a . for the concatenation. For example, for the database foo and the
-  *                      collection bar, the full collection name is foo.bar.
+  *                     collection bar, the full collection name is foo.bar.
   * @param selector BSON document that represent the query used to select the documents to be removed. The selector
-  *            will contain one or more elements, all of which must match for a document to be removed from the
+  *           will contain one or more elements, all of which must match for a document to be removed from the
-  *            collection.
+  *           collection.
   * @param singleRemove If set, the database will remove only the first matching document in the collection.
-  *                Otherwise all matching documents will be removed.
+  *               Otherwise all matching documents will be removed.
   */
 
 case class DeleteMessage(
@@ -365,17 +369,36 @@
 case class ReplyMessage private[driver] (private val buffer : ByteString) extends Message {
   val opcode = Message.OP_REPLY
 
-  // struct {
-  //   MsgHeader header;         // standard message header
-  //   int32     responseFlags;  // bit vector - see details below
-  //   int64     cursorID;       // cursor id if client needs to do get more's
-  //   int32     startingFrom;   // where in the cursor this reply is starting
-  //   int32     numberReturned; // number of documents in the reply
-  //   document* documents;      // documents
-  // }
+  /** {{{
+    * struct {
+    *  MsgHeader header;         // standard message header
+    *  int32     responseFlags;  // bit vector - see details below
+    *  int64     cursorID;       // cursor id if client needs to do get more's
+    *  int32     startingFrom;   // where in the cursor this reply is starting
+    *  int32     numberReturned; // number of documents in the reply
+    *  document* documents;      // documents
+    * }
+    * }}}
+    */
   val itr = buffer.iterator
 
   /** {{{
+    * struct MsgHeader {
+    *  int32   messageLength; // total message size, including this
+    *  int32   requestID;     // identifier for this message
+    *  int32   responseTo;    // requestID from the original request (used in reponses from db)
+    *  int32   opCode;        // request type - see table below
+    * }
+    * }}}
+    * @return
+    */
+
+  val messageLength = itr.getInt
+  val requestID = itr.getInt
+  val responseTo = itr.getInt
+  val opCode = itr.getInt
+
+  /** {{{
     * bit   name	description
     * 0	 CursorNotFound	  Set when getMore is called but the cursor id is not valid at the server. Returned with
     * zero results.
@@ -405,4 +428,3 @@
   val documents = itr.getObjs(numberReturned)
 
 }
-
Index: driver/test/rxmongo/driver/SupervisorSpec.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- driver/test/rxmongo/driver/SupervisorSpec.scala	(revision 681232bac320d3dafa7f8840483610a2514f293e)
+++ driver/test/rxmongo/driver/SupervisorSpec.scala	(revision )
@@ -24,6 +24,7 @@
 
 import akka.actor._
 import akka.testkit.TestProbe
+import rxmongo.driver.Supervisor.NumConnectionsReply
 
 import scala.concurrent.duration._
 
@@ -38,6 +39,21 @@
       within(100.millis) {
         probe.expectTerminated(s)
       }
+      success
+    }
+
+    "return 0 for NumChannels at startup" in {
+      val s = system.actorOf(Supervisor.props())
+      s ! Supervisor.NumConnections
+      expectMsg(100.millis, NumConnectionsReply(0))
+      success
+    }
+
+    "add a connection" in {
+      val s = system.actorOf(Supervisor.props())
+      val uri = MongoURI("mongodb://localhost/").get
+      s ! Supervisor.AddConnection(uri, "MyConnection")
+      expectMsgType[ActorRef](100.millis)
       success
     }
   }
Index: driver/test/rxmongo/driver/DriverSpec.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- driver/test/rxmongo/driver/DriverSpec.scala	(revision 681232bac320d3dafa7f8840483610a2514f293e)
+++ driver/test/rxmongo/driver/DriverSpec.scala	(revision )
@@ -26,8 +26,11 @@
 import javax.net.SocketFactory
 
 import akka.actor.ActorRef
+import akka.pattern.ask
+
 import org.specs2.execute.Result
 import org.specs2.mutable.Specification
+import rxmongo.bson.BSONObject
 
 import scala.concurrent.Await
 import scala.concurrent.duration.Duration
@@ -57,6 +60,21 @@
       driver.close(Duration(500, "ms"))
       success
     }
+
+    "send an innocuous query" in mongoTest { () ⇒
+      val driver = Driver(None, Some("Thing"))
+      val future = driver.connect("mongodb://localhost/", Some("TestConnection"))
+      val conn = Await.result(future, Duration(1, "s"))
+      conn.isInstanceOf[ActorRef] must beTrue
+      val c = conn.asInstanceOf[ActorRef]
+      c.ask(QueryMessage("rxmongo.test", 0, 1, BSONObject()))(Driver.defaultTimeout) map {
+        case msg : ReplyMessage ⇒
+          println("Got ReplyMessage)")
+      }
+      driver.close(Duration(500, "ms"))
+      success
+    }
+
   }
 
 }
Index: driver/src/rxmongo/driver/Connection.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- driver/src/rxmongo/driver/Connection.scala	(revision 681232bac320d3dafa7f8840483610a2514f293e)
+++ driver/src/rxmongo/driver/Connection.scala	(revision )
@@ -27,8 +27,13 @@
 import akka.actor.SupervisorStrategy._
 import akka.actor._
 import akka.routing.{ Broadcast, DefaultResizer, SmallestMailboxPool }
+import akka.pattern.ask
+import rxmongo.bson.BSONBoolean
 
+import scala.collection.mutable
+import scala.concurrent.ExecutionContext
 import scala.concurrent.duration.Duration
+import scala.util.{ Failure, Success }
 
 object Connection {
   def props(uri : MongoURI) = Props(classOf[Connection], uri)
@@ -83,10 +88,51 @@
     resizer = Some(poolResizer)
   )
 
-  lazy val primary_addr : InetSocketAddress = {
-    // FIXME: need to negotiate with the servers for the primary
-    new InetSocketAddress(InetAddress.getLocalHost, 27017)
+  /** The address of the primary node in the replica set. It is assumed, at initialization, that the first host in
+    * URI is the primary. If that doesn't hold out to be true, it will be remedied at the first message request by
+    * polling for the primary.
+    */
+  var primary_addr : InetSocketAddress = uri.hosts.head
+  var msgs_to_next_check : Int = 1
+
+  def maybeCheckReplicaSet() = {
+    implicit val executionContext : ExecutionContext = context.dispatcher
+    msgs_to_next_check -= 1
+    if (msgs_to_next_check == 0) {
+      msgs_to_next_check = uri.options.messagesPerResize
+      primary_router.ask(IsMasterCmd)(Driver.defaultTimeout) map {
+        case msg : ReplyMessage ⇒ {
+          if (msg.numberReturned > 0) {
+            val doc = msg.documents.head
+            /*          doc.getAs[Boolean]("ismaster") match {
+              case Success(Some(x)) ⇒
+                log.warning("Current primary is confirmed as primary")
+              case Success(None) ⇒
+                log.warning("Response from IsMasterCmd had no 'ismaster' field")
+              case Failure(xcptn) ⇒
+                log.warning("Could not extract 'ismaster' field from IsMasterCmd response", xcptn)
+            } */
+            doc.get("ismaster") match {
+              case Some(v) ⇒
+                v match {
+                  case b : BSONBoolean ⇒
+                    if (b.value) {
+                      log.warning("Current primary is confirmed as primary.")
+                    } else {
+                      log.warning("Current primary is no longer the primary node.")
-  }
+                    }
+                }
+              case None ⇒
+                log.warning("Response from IsMasterCmd had no 'ismaster' field")
+            }
+          } else {
+            log.warning("Got no response from IsMasterCmd")
+          }
+        }
+        case x : Any ⇒ log.warning(s"Got junk from IsMasterCmd")
+      }
+    }
+  }
 
   /** Primary Router
     * This is the router that manages a pool of Channels to the MongoDB Primary server. It is configured according
@@ -111,15 +157,16 @@
       primary_router ! PoisonPill
       context become closing
 
-    case OpenChannel ⇒
-
     case RunCommand(command) ⇒
+      maybeCheckReplicaSet()
       primary_router ! command
+
+    case Channel.UnsolicitedReply(reply) ⇒
+      log.warning(s"Unsolicited Reply from MongoDB: $reply (ignored).")
+
   }
 
   def closing : Receive = {
-    case OpenChannel ⇒
-      log.warning("Ignoring OpenChannel request while closing connection")
     case RunCommand ⇒
       log.warning("Ignoring RunCommand request while closing connection")
     case Terminated(actor : ActorRef) ⇒
Index: driver/src/rxmongo/driver/Command.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- driver/src/rxmongo/driver/Command.scala	(revision 681232bac320d3dafa7f8840483610a2514f293e)
+++ driver/src/rxmongo/driver/Command.scala	(revision )
@@ -39,6 +39,6 @@
 
 class AdminCommand(query : BSONObject) extends Command("admin", query)
 
-case class IsMasterCmd(db : String) extends Command(db, BSONObject("isMaster" -> 1))
+case object IsMasterCmd extends Command("admin.$cmd", BSONObject("isMaster" -> 1))
 case class GetLastErrorCmd(db : String) extends Command(db, BSONObject("getLastError" -> 1))
 case class DBStatsCmd(db : String) extends Command(db, BSONObject("dbStats" -> 1))
